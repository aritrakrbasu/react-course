{"ast":null,"code":"var _jsxFileName = \"/Users/gd2102/Desktop/teaching/day2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // meme state\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectMeme] = useState({});\n  const [caption1, setCaption1] = useState(\"\");\n  const [caption2, setCaption2] = useState(\"\");\n  useEffect(() => {\n    //fetch memes list\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => {\n      return res.json();\n    }).then(resJSON => setMemes(resJSON.data.memes)).catch(err => console.log(err));\n  }, []);\n\n  function selectMemeTemplate(memeObj) {\n    setSelectMeme(memeObj);\n  }\n\n  function generateMeme() {\n    fetch(\"https://api.imgflip.com/caption_image\", {\n      method: \"POST\",\n      body: {\n        template_id: selectedMeme.id,\n        username: \"AritraBasu\",\n        password: \"aritrabasu\",\n        text0: caption1,\n        text1: caption2\n      }\n    }).then(res => {\n      return res.json();\n    }).then(resJSON => console.log(resJSON)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-meme-container-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Caption 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCaption1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Caption 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCaption2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateMeme,\n            children: \" Generate Meme \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-meme-container-right\",\n        children: selectedMeme && (selectedMeme === null || selectedMeme === void 0 ? void 0 : selectedMeme.id) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMeme.url,\n          className: \"selected-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: memes.map((meme, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.url,\n          alt: \"memeImage\",\n          style: {\n            height: \"150px\",\n            margin: \"40px\"\n          },\n          onClick: () => selectMemeTemplate(meme)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"aVrBIKIuXQ+ua8Ofd0+AjYVg/Vs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","App","memes","setMemes","selectedMeme","setSelectMeme","caption1","setCaption1","caption2","setCaption2","fetch","then","res","json","resJSON","data","catch","err","console","log","selectMemeTemplate","memeObj","generateMeme","method","body","template_id","id","username","password","text0","text1","e","preventDefault","target","value","url","map","meme","index","height","margin"],"sources":["/Users/gd2102/Desktop/teaching/day2/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\t// meme state\n\tconst [memes, setMemes] = useState([]);\n\tconst [selectedMeme, setSelectMeme] = useState({});\n\tconst [caption1, setCaption1] = useState(\"\");\n\tconst [caption2, setCaption2] = useState(\"\");\n\n\tuseEffect(() => {\n\t\t//fetch memes list\n\t\tfetch(\"https://api.imgflip.com/get_memes\")\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((resJSON) => setMemes(resJSON.data.memes))\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tfunction selectMemeTemplate(memeObj) {\n\t\tsetSelectMeme(memeObj);\n\t}\n\n\tfunction generateMeme() {\n\t\tfetch(\"https://api.imgflip.com/caption_image\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: {\n\t\t\t\ttemplate_id: selectedMeme.id,\n\t\t\t\tusername: \"AritraBasu\",\n\t\t\t\tpassword: \"aritrabasu\",\n\t\t\t\ttext0: caption1,\n\t\t\t\ttext1: caption2,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((resJSON) => console.log(resJSON))\n\t\t\t.catch((err) => console.log(err));\n\t}\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='selected-meme-container'>\n\t\t\t\t<div className='selected-meme-container-left'>\n\t\t\t\t\t<form onSubmit={(e) => e.preventDefault()}>\n\t\t\t\t\t\t<label>Caption 1</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tonChange={(e) => setCaption1(e.target.value)}></input>\n\t\t\t\t\t\t<label>Caption 2</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tonChange={(e) => setCaption2(e.target.value)}></input>\n\t\t\t\t\t\t<button onClick={generateMeme}> Generate Meme </button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className='selected-meme-container-right'>\n\t\t\t\t\t{selectedMeme && selectedMeme?.id && (\n\t\t\t\t\t\t<img src={selectedMeme.url} className='selected-image' />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='meme-container'>\n\t\t\t\t{memes.map((meme, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tsrc={meme.url}\n\t\t\t\t\t\t\talt='memeImage'\n\t\t\t\t\t\t\tstyle={{ height: \"150px\", margin: \"40px\" }}\n\t\t\t\t\t\t\tonClick={() => selectMemeTemplate(meme)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,YAAD,EAAeC,aAAf,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACf;IACAW,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACQC,GAAD,IAAS;MACd,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACA,CAHF,EAIEF,IAJF,CAIQG,OAAD,IAAaX,QAAQ,CAACW,OAAO,CAACC,IAAR,CAAab,KAAd,CAJ5B,EAKEc,KALF,CAKSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALjB;EAMA,CARQ,EAQN,EARM,CAAT;;EAUA,SAASG,kBAAT,CAA4BC,OAA5B,EAAqC;IACpChB,aAAa,CAACgB,OAAD,CAAb;EACA;;EAED,SAASC,YAAT,GAAwB;IACvBZ,KAAK,CAAC,uCAAD,EAA0C;MAC9Ca,MAAM,EAAE,MADsC;MAE9CC,IAAI,EAAE;QACLC,WAAW,EAAErB,YAAY,CAACsB,EADrB;QAELC,QAAQ,EAAE,YAFL;QAGLC,QAAQ,EAAE,YAHL;QAILC,KAAK,EAAEvB,QAJF;QAKLwB,KAAK,EAAEtB;MALF;IAFwC,CAA1C,CAAL,CAUEG,IAVF,CAUQC,GAAD,IAAS;MACd,OAAOA,GAAG,CAACC,IAAJ,EAAP;IACA,CAZF,EAaEF,IAbF,CAaQG,OAAD,IAAaI,OAAO,CAACC,GAAR,CAAYL,OAAZ,CAbpB,EAcEE,KAdF,CAcSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdjB;EAeA;;EACD,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,wBACC;MAAK,SAAS,EAAC,yBAAf;MAAA,wBACC;QAAK,SAAS,EAAC,8BAAf;QAAA,uBACC;UAAM,QAAQ,EAAGc,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAvB;UAAA,wBACC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD,eAEC;YACC,IAAI,EAAC,MADN;YAEC,QAAQ,EAAGD,CAAD,IAAOxB,WAAW,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV;UAF7B;YAAA;YAAA;YAAA;UAAA,QAFD,eAKC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALD,eAMC;YACC,IAAI,EAAC,MADN;YAEC,QAAQ,EAAGH,CAAD,IAAOtB,WAAW,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV;UAF7B;YAAA;YAAA;YAAA;UAAA,QAND,eASC;YAAQ,OAAO,EAAEZ,YAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATD;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QADD,eAcC;QAAK,SAAS,EAAC,+BAAf;QAAA,UACElB,YAAY,KAAIA,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEsB,EAAlB,CAAZ,iBACA;UAAK,GAAG,EAAEtB,YAAY,CAAC+B,GAAvB;UAA4B,SAAS,EAAC;QAAtC;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA,QAdD;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAqBC;MAAK,SAAS,EAAC,gBAAf;MAAA,UACEjC,KAAK,CAACkC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;QAC3B,oBACC;UAEC,GAAG,EAAED,IAAI,CAACF,GAFX;UAGC,GAAG,EAAC,WAHL;UAIC,KAAK,EAAE;YAAEI,MAAM,EAAE,OAAV;YAAmBC,MAAM,EAAE;UAA3B,CAJR;UAKC,OAAO,EAAE,MAAMpB,kBAAkB,CAACiB,IAAD;QALlC,GACMC,KADN;UAAA;UAAA;UAAA;QAAA,QADD;MASA,CAVA;IADF;MAAA;MAAA;MAAA;IAAA,QArBD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAqCA;;GA3EQrC,G;;KAAAA,G;AA6ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}