{"ast":null,"code":"var _jsxFileName = \"/Users/gd2102/Desktop/teaching/day2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // meme state\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectMeme] = useState({});\n  const [selectedMemeImage, setSelectMemeImage] = useState(\"\");\n  const [caption, setCaptions] = useState([]);\n  useEffect(() => {\n    //fetch memes list\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => {\n      return res.json();\n    }).then(resJSON => setMemes(resJSON.data.memes)).catch(err => console.log(err));\n  }, []);\n\n  function selectMemeTemplate(memeObj) {\n    setSelectMeme(memeObj);\n    setSelectMemeImage(memeObj.url);\n    setCaptions(new Array(memeObj.box_count));\n  }\n\n  function generateMeme() {\n    const param = new FormData();\n    param.append(\"template_id\", selectedMeme.id);\n    param.append(\"username\", \"AritraBasu\");\n    param.append(\"password\", \"aritrabasu\");\n    fetch(\"https://api.imgflip.com/caption_image\", {\n      method: \"POST\",\n      body: param\n    }).then(res => {\n      return res.json();\n    }).then(resJSON => setSelectMemeImage(resJSON.data.url)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-meme-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-meme-container-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: [caption && caption.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 16\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateMeme,\n            children: \" Generate Meme \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-meme-container-right\",\n        children: selectedMemeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMemeImage,\n          className: \"selected-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-container\",\n      children: memes.map((meme, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.url,\n          alt: \"memeImage\",\n          style: {\n            height: \"150px\",\n            margin: \"40px\"\n          },\n          onClick: () => selectMemeTemplate(meme)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"GG84NYOiAa+qUsimP7sw0G+vdIM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","App","memes","setMemes","selectedMeme","setSelectMeme","selectedMemeImage","setSelectMemeImage","caption","setCaptions","fetch","then","res","json","resJSON","data","catch","err","console","log","selectMemeTemplate","memeObj","url","Array","box_count","generateMeme","param","FormData","append","id","method","body","e","preventDefault","map","value","index","meme","height","margin"],"sources":["/Users/gd2102/Desktop/teaching/day2/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\t// meme state\n\tconst [memes, setMemes] = useState([]);\n\tconst [selectedMeme, setSelectMeme] = useState({});\n\tconst [selectedMemeImage, setSelectMemeImage] = useState(\"\");\n\tconst [caption, setCaptions] = useState([]);\n\n\tuseEffect(() => {\n\t\t//fetch memes list\n\t\tfetch(\"https://api.imgflip.com/get_memes\")\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((resJSON) => setMemes(resJSON.data.memes))\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tfunction selectMemeTemplate(memeObj) {\n\t\tsetSelectMeme(memeObj);\n\t\tsetSelectMemeImage(memeObj.url);\n\t\tsetCaptions(new Array(memeObj.box_count));\n\t}\n\n\tfunction generateMeme() {\n\t\tconst param = new FormData();\n\t\tparam.append(\"template_id\", selectedMeme.id);\n\t\tparam.append(\"username\", \"AritraBasu\");\n\t\tparam.append(\"password\", \"aritrabasu\");\n\n\t\tfetch(\"https://api.imgflip.com/caption_image\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: param,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((resJSON) => setSelectMemeImage(resJSON.data.url))\n\t\t\t.catch((err) => console.log(err));\n\t}\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='selected-meme-container'>\n\t\t\t\t<div className='selected-meme-container-left'>\n\t\t\t\t\t<form onSubmit={(e) => e.preventDefault()}>\n\t\t\t\t\t\t{caption &&\n\t\t\t\t\t\t\tcaption.map((value, index) => {\n\t\t\t\t\t\t\t\treturn <input key={index} type='text'></input>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t<button onClick={generateMeme}> Generate Meme </button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className='selected-meme-container-right'>\n\t\t\t\t\t{selectedMemeImage && (\n\t\t\t\t\t\t<img src={selectedMemeImage} className='selected-image' />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='meme-container'>\n\t\t\t\t{memes.map((meme, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tsrc={meme.url}\n\t\t\t\t\t\t\talt='memeImage'\n\t\t\t\t\t\t\tstyle={{ height: \"150px\", margin: \"40px\" }}\n\t\t\t\t\t\t\tonClick={() => selectMemeTemplate(meme)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}